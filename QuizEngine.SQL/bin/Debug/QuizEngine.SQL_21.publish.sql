/*
Deployment script for QuizEngine

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "QuizEngine"
:setvar DefaultFilePrefix "QuizEngine"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Altering [dbo].[ArchivedQuestions]...';


GO
ALTER TABLE [dbo].[ArchivedQuestions]
    ADD [IndexOrder] SMALLINT NULL;


GO
PRINT N'Altering [dbo].[ArchivedQuestions_InsertById]...';


GO
ALTER PROCEDURE [dbo].[ArchivedQuestions_InsertById]
	@QuestionGUID uniqueidentifier,
	@QuizGUID uniqueidentifier,
	@RowNumber smallint
AS
BEGIN
	SET NOCOUNT ON;
	DECLARE 

	@ChoiceGUID uniqueidentifier,
	@ArchivedQuestionGUID uniqueidentifier = NEWID(),
	@ArchivedQuestionText nvarchar(max),
	@QuestionType smallint,
	@LevelGUID uniqueidentifier, 
	@CategoryGUID uniqueidentifier

	SELECT @ArchivedQuestionText=Text, @QuestionType=QuestionType, @LevelGUID=LevelGUID, @CategoryGUID=CategoryGUID 
	FROM Questions
	WHERE @QuestionGUID=QuestionGUID
	
	INSERT INTO ArchivedQuestions VALUES(@ArchivedQuestionGUID, @ArchivedQuestionText, @QuestionType, @LevelGUID, @CategoryGUID, @QuizGUID, @RowNumber)


	INSERT INTO ArchivedChoices
	SELECT NEWID(),
    @ArchivedQuestionGUID,
	C.AnswerText,
	C.Value,
	C.IsCorrect
    FROM Questions as Q 
	INNER JOIN Choices as C ON C.QuestionGUID = @QuestionGUID
	WHERE C.QuestionGUID=Q.QuestionGUID

END
GO
PRINT N'Altering [dbo].[ArchivedQuestions_ReadAll]...';


GO
ALTER PROCEDURE [dbo].[ArchivedQuestions_ReadAll]

	
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT ArchivedQuestionGUID, ArchivedQuestionText,QuestionType,LevelGUID,CategoryGUID, QuizGUID from ArchivedQuestions
	ORDER BY IndexOrder

END
GO
PRINT N'Altering [dbo].[ArchivedQuestions_ReadAllByQuizID]...';


GO
ALTER PROCEDURE [dbo].[ArchivedQuestions_ReadAllByQuizID]
	@QuizGUID uniqueIdentifier
AS
BEGIN
	SET NOCOUNT ON;
	SELECT aq.ArchivedQuestionGUID, aq.ArchivedQuestionText, aq.QuestionType, aq.LevelGUID,
		   aq.CategoryGUID, aq.QuizGUID
	FROM ArchivedQuestions aq
	JOIN Quizes q ON q.QuizGUID = aq.QuizGUID
	WHERE q.QuizGUID = @QuizGUID
	ORDER BY aq.IndexOrder
END
GO
PRINT N'Altering [dbo].[ArchivedQuestions_ReadByID]...';


GO
ALTER PROCEDURE [dbo].[ArchivedQuestions_ReadByID]

	@ArchivedQuestionGUID uniqueidentifier
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT ArchivedQuestionGUID, ArchivedQuestionText,QuestionType,LevelGUID,CategoryGUID, QuizGUID from ArchivedQuestions
	WHERE ArchivedQuestionGUID=@ArchivedQuestionGUID
	ORDER BY IndexOrder
END
GO
PRINT N'Altering [dbo].[QuizResultView_ReadResult]...';


GO
ALTER PROCEDURE [dbo].[QuizResultView_ReadResult]
@QuizGUID uniqueidentifier,
@UserGUID uniqueidentifier
AS
BEGIN
 
  DECLARE @UserAnswers TABLE (
	QuizGuid uniqueidentifier,
	ArchivedQuestionGuid uniqueidentifier,
	Answered bit,
	ArchivedChoiceGuid uniqueidentifier,
	IsCorrect bit,
	Value decimal(5,2),
	Grade decimal(5,2)
)

INSERT INTO @UserAnswers
 SELECT  AQ.QuizGUID,
		 AQ.ArchivedQuestionGUID,
		 (CASE WHEN (A.ArchivedQuestionGUID is null) THEN 0 ELSE 1 END ) as  Answered,
		 AC.ChoiceGUID,
		 AC.IsCorrect,
		 AC.Value,
		 A.Grade
 FROM  ArchivedQuestions as AQ 
 INNER JOIN ArchivedChoices as AC ON AQ.ArchivedQuestionGUID = AC.ArchivedQuestionGUID
 LEFT JOIN Answers as A ON A.ArchivedQuestionGUID = AC.ArchivedQuestionGUID AND AC.ChoiceGUID = a.ArchivedChoiceGUID
 WHERE @QuizGUID = AQ.QuizGUID 
		AND
	   @UserGUID = a.UserGUID
 ORDER BY AQ.ArchivedQuestionGUID, ChoiceGUID

 SELECT      AQ.QuizGUID,
			 AQ.ArchivedQuestionGUID as QuestionID,
			 "Result" = 
			 CASE AQ.QuestionType 
				 WHEN 2 then				  			 
					 CASE (SELECT Answered FROM @UserAnswers as UA where ua.ArchivedQuestionGuid = AQ.ArchivedQuestionGUID and ua.IsCorrect=1)
																																		 WHEN 1 THEN 1
																																		 ELSE 0
					 END 
				WHEN 1 THEN							
					CASE
					WHEN EXISTS(
								SELECT count(UA.Answered) 
								as PartialResult
								FROM @UserAnswers as UA 
								WHERE ua.ArchivedQuestionGuid = AQ.ArchivedQuestionGUID
								and ua.IsCorrect=1
								HAVING count(UA.Answered)  = (SELECT count(AC1.ChoiceGUID) FROM ArchivedChoices as AC1
								WHERE ac1.ArchivedQuestionGUID=AQ.ArchivedQuestionGUID and AC1.IsCorrect=1)) 
																																THEN 1
																																ELSE 0
					END	
				WHEN 4 THEN 
					(SELECT UA.Value FROM @UserAnswers as UA WHERE ua.ArchivedQuestionGuid = AQ.ArchivedQuestionGUID and ua.Answered=1)				
				WHEN 0 THEN 
					(SELECT UA.Grade from @UserAnswers as UA WHERE ua.ArchivedQuestionGuid = AQ.ArchivedQuestionGUID and ua.Answered=1)
				WHEN 3 then 
					(SELECT UA.Grade from @UserAnswers as UA WHERE ua.ArchivedQuestionGuid = AQ.ArchivedQuestionGUID and ua.Answered=1)					
			END		 
	 FROM ArchivedQuestions as AQ
	 WHERE AQ.QuizGUID = @QuizGUID
	 	
END
GO
PRINT N'Refreshing [dbo].[ArchivedQuestions_Delete]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[ArchivedQuestions_Delete]';


GO
PRINT N'Refreshing [dbo].[ArchivedQuestions_Insert]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[ArchivedQuestions_Insert]';


GO
PRINT N'Refreshing [dbo].[ArchivedQuestions_Update]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[ArchivedQuestions_Update]';


GO
PRINT N'Refreshing [dbo].[Categories_CanBeDeleted]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Categories_CanBeDeleted]';


GO
PRINT N'Refreshing [dbo].[Categories_CountUsingQuestions]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Categories_CountUsingQuestions]';


GO
PRINT N'Refreshing [dbo].[FreeTextQuestionsView_ReadAll]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[FreeTextQuestionsView_ReadAll]';


GO
PRINT N'Refreshing [dbo].[QuizUserPreview_ReadAll]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[QuizUserPreview_ReadAll]';


GO
PRINT N'Update complete.';


GO
