/*
Deployment script for QuizEngine

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "QuizEngine"
:setvar DefaultFilePrefix "QuizEngine"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Altering [dbo].[Levels_ReadByDifficulty]...';


GO
ALTER PROCEDURE [dbo].[Levels_ReadByDifficulty]
	@Taglist nvarchar(50),
	@Difficulty smallint,
	@Number smallint,
	@Difminus smallint,
	@Difplus smallint,
	@Num smallint,
	@Category nvarchar(50),
	@Questionlist nvarchar(50)
	
AS
BEGIN
	SET NOCOUNT ON;

	declare @Tags table
	(
		Data nvarchar(250)
	)

	declare @Questions table 
	(
		Data nvarchar(250)
	)

	INSERT INTO @Tags
		SELECT *
		FROM dbo.SplitStringList(@Taglist)

	INSERT INTO @Questions
		SELECT *
		FROM dbo.SplitStringList(@Questionlist)

	IF NOT EXISTS(
		SELECT TOP(@Num) q.QuestionGUID, q.Text, q.QuestionType,q.CategoryGUID,q.LevelGUID, t.TagName
		FROM Questions q 
			INNER JOIN Levels l ON l.LevelGUID = q.LevelGUID
			INNER JOIN Categories c ON c.CategoryGUID = q.CategoryGUID
			INNER JOIN QuestionTags qt ON qt.QuestionGUID = q.QuestionGUID
			INNER JOIN Tags t ON t.TagGUID = qt.TagGUID
			INNER JOIN @Tags tl ON tl.Data = t.TagName
			INNER JOIN @Questions qq ON qq.Data = q.QuestionType
		WHERE l.Difficulty=@Difminus 
		AND c.CategoryName=@Category)
		OR
	   NOT EXISTS(
		SELECT TOP(@Num) q.QuestionGUID, q.Text, q.QuestionType,q.CategoryGUID,q.LevelGUID, t.TagName
		FROM Questions q 
			INNER JOIN Levels l ON l.LevelGUID = q.LevelGUID
			INNER JOIN Categories c ON c.CategoryGUID = q.CategoryGUID
			INNER JOIN QuestionTags qt ON qt.QuestionGUID = q.QuestionGUID
			INNER JOIN Tags t ON t.TagGUID = qt.TagGUID
			INNER JOIN @Tags tl ON tl.Data = t.TagName
			INNER JOIN @Questions qq ON qq.Data = q.QuestionType
		WHERE l.Difficulty=@Difplus
		AND c.CategoryName=@Category)
	BEGIN
		SET @Num = @Num*2
	END

	SELECT TOP(@Number) q.QuestionGUID, q.Text, q.QuestionType,q.CategoryGUID,q.LevelGUID, t.TagName
	FROM Questions q 
		INNER JOIN Levels l ON l.LevelGUID = q.LevelGUID
		INNER JOIN Categories c ON c.CategoryGUID = q.CategoryGUID
		INNER JOIN QuestionTags qt ON qt.QuestionGUID = q.QuestionGUID
		INNER JOIN Tags t ON t.TagGUID = qt.TagGUID
		INNER JOIN @Tags tl ON tl.Data = t.TagName
		INNER JOIN @Questions qq ON qq.Data = q.QuestionType
	WHERE l.Difficulty=@Difficulty
	AND c.CategoryName=@Category
	UNION
	SELECT TOP(@Num) q.QuestionGUID, q.Text, q.QuestionType,q.CategoryGUID,q.LevelGUID, t.TagName
	FROM Questions q 
		INNER JOIN Levels l ON l.LevelGUID = q.LevelGUID
		INNER JOIN Categories c ON c.CategoryGUID = q.CategoryGUID
		INNER JOIN QuestionTags qt ON qt.QuestionGUID = q.QuestionGUID
		INNER JOIN Tags t ON t.TagGUID = qt.TagGUID
		INNER JOIN @Tags tl ON tl.Data = t.TagName
		INNER JOIN @Questions qq ON qq.Data = q.QuestionType
	WHERE l.Difficulty=@Difminus
	AND c.CategoryName=@Category
	UNION
	SELECT TOP(@Num) q.QuestionGUID, q.Text, q.QuestionType,q.CategoryGUID,q.LevelGUID, t.TagName
	FROM Questions q 
		INNER JOIN Levels l ON l.LevelGUID = q.LevelGUID
		INNER JOIN Categories c ON c.CategoryGUID = q.CategoryGUID
		INNER JOIN QuestionTags qt ON qt.QuestionGUID = q.QuestionGUID
		INNER JOIN Tags t ON t.TagGUID = qt.TagGUID
		INNER JOIN @Tags tl ON tl.Data = t.TagName
		INNER JOIN @Questions qq ON qq.Data = q.QuestionType
	WHERE l.Difficulty=@Difplus
	AND c.CategoryName=@Category
END
GO
PRINT N'Altering [dbo].[QuizUserLink_Insert]...';


GO
ALTER PROCEDURE [dbo].[QuizUserLink_Insert]
	@QuizGUID uniqueidentifier,
	@UserGuid uniqueidentifier,
	@Result decimal(5,2) = null,
	@QuizDate   Datetime,
	@OnlineOrDownloaded bit,
	@IsTaken bit = null
AS
BEGIN
	SET NOCOUNT ON;
		INSERT INTO dbo.QuizUserLinks VALUES (@QuizGUID, @UserGuid , @Result, @QuizDate, @OnlineOrDownloaded, @IsTaken)
END
GO
PRINT N'Altering [dbo].[QuizUserLinks_Update]...';


GO
ALTER PROCEDURE [dbo].[QuizUserLinks_Update]
	@QuizGUID uniqueidentifier,
	@UserGUID uniqueidentifier,
	@Result decimal(5,2) = null,
	@QuizDate   Datetime,
	@OnlineOrDownloaded bit,
	@IsTaken bit = null
AS
BEGIN
	SET NOCOUNT ON;
	UPDATE dbo.QuizUserLinks
	SET UserGUID = @UserGUID,
		Result = @Result,
		QuizDate = @QuizDate,
		OnlineOrDownloaded = @OnlineOrDownloaded,
		IsTaken =@IsTaken
	WHERE QuizGUID = @QuizGUID
END
GO
PRINT N'Update complete.';


GO
